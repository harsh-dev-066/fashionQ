{"version":3,"sources":["components/collection-preview/collection-preview.jsx","components/collection-overview/collection-overview.jsx","pages/shop/shop.jsx","redux/shop/shop-action.js","redux/shop/shop-selectors.js","components/collection-item/collection-item.jsx"],"names":["CollectionPreview","_ref","title","items","React","createElement","className","toUpperCase","filter","_item","idx","map","item","CollectionItem","key","id","mapStateToProps","createStructuredSelector","collections","selectCollectionForPreview","connect","_ref2","otherCollectionProps","Object","assign","ShopPage","Component","constructor","arguments","unSubscribeFromSnapshot","componentDidMount","updateCollections","this","props","firestore","collection","onSnapshot","async","collectionsMap","convertCollectionSnapshotToMaps","snapshot","render","match","Route","exact","path","concat","component","CollectionOverview","dispatch","type","shopActionTypes","UPDATE_COLLECTIONS","payload","selectCollections","createSelector","state","shop","selectCollection","collectionUrlParam","keys","addItem","name","price","imageUrl","style","backgroundImage","CustomButton","onClick"],"mappings":"qMAkBeA,MAZWC,IAAA,IAAC,MAAEC,EAAK,MAAEC,GAAOF,EAAA,OACvCG,IAAAC,cAAA,OAAKC,UAAU,sBACXF,IAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMK,eAC7BH,IAAAC,cAAA,OAAKC,UAAU,WACVH,EAAMK,OAAO,CAACC,EAAOC,IAAQA,EAAM,GAC/BC,IAAKC,GACFR,IAAAC,cAACQ,IAAc,CAACC,IAAKF,EAAKG,GAAIH,KAAMA,Q,MCFxD,MAUMI,EAAkBC,YAAyB,CAC7CC,YAAaC,MAIFC,kBAAQJ,EAARI,CAfYnB,IAAA,IAAC,YAAEiB,GAAajB,EAAA,OACvCG,IAAAC,cAAA,OAAKC,UAAU,uBAEPY,EAAYP,IAAIU,IAAA,IAAC,GAAEN,KAAOO,GAAsBD,EAAA,OAC5CjB,IAAAC,cAACL,EAAiBuB,OAAAC,OAAA,CAACV,IAAKC,GAAQO,S,gBCDhD,MAAMG,UAAiBrB,IAAMsB,UAAUC,cAAA,SAAAC,WAAA,KACrCC,wBAA0B,KAE1BC,oBACE,MAAM,kBAAEC,GAAsBC,KAAKC,MACbC,IAAUC,WAAW,cAE7BC,WAAWC,UACvB,MAAMC,EAAiBC,YAAgCC,GACvDT,EAAkBO,KAItBG,SACE,MAAM,MAAEC,GAAUV,KAAKC,MACvB,OACE7B,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAACsC,IAAK,CAACC,OAAK,EAACC,KAAI,GAAAC,OAAKJ,EAAMG,MAAQE,UAAWC,MAcxC5B,sBAAQ,KALK6B,IAAQ,CAClClB,kBAAoBO,GAClBW,ECtC6BX,KAAc,CAC3CY,KAAMC,IAAgBC,mBACtBC,QAASf,IDoCAP,CAAkBO,MAGhBlB,CAAkCK,I,gCE5CjD,+EAEA,MAEa6B,EAAoBC,YAC7B,CAHeC,GAASA,EAAMC,MAI9BA,GAAQA,EAAKvC,aAGJwC,EAAmBC,GAAsBJ,YAClD,CAACD,GACDpC,GAAeA,EAAYyC,IAGlBxC,EAA6BoC,YACtC,CAACD,GACDpC,GAAeK,OAAOqC,KAAK1C,GAAaP,IAAIG,GAAOI,EAAYJ,M,gCChBnE,kDA6BeM,gBAAQ,KAJI6B,IAAQ,CAC/BY,QAASjD,GAAQqC,EAASY,YAAQjD,MAGvBQ,CArBQnB,IAAwB,IAAvB,KAAEW,EAAI,QAAEiD,GAAS5D,EACrC,MAAM,KAAE6D,EAAI,MAAEC,EAAK,SAAEC,GAAapD,EAClC,OACIR,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAA,OACIC,UAAU,QACV2D,MAAO,CAAEC,gBAAgB,OAADpB,OAASkB,EAAQ,QAE7C5D,IAAAC,cAAA,OAAKC,UAAU,qBACXF,IAAAC,cAAA,QAAMC,UAAU,QAAQwD,GACxB1D,IAAAC,cAAA,QAAMC,UAAU,SAAQ,IAAU,GAARyD,EAAW,MAEzC3D,IAAAC,cAAC8D,IAAY,CAACC,QAASA,IAAMP,EAAQjD,GAAON,UAAU,iBAAkB,qB","file":"static/js/4.d0cb342e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport CollectionItem from '../collection-item/collection-item';\r\n\r\nimport './collection-preview.scss';\r\n\r\nconst CollectionPreview = ({ title, items }) => (\r\n    <div className='collection-preview'>\r\n        <h1 className='title'>{title.toUpperCase()}</h1>\r\n        <div className='preview'>\r\n            {items.filter((_item, idx) => idx < 4)\r\n                .map((item) => (\r\n                    <CollectionItem key={item.id} item={item} />\r\n                ))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CollectionPreview;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectCollectionForPreview } from '../../redux/shop/shop-selectors';\r\n\r\nimport CollectionPreview from '../collection-preview/collection-preview';\r\n\r\nimport './collection-overview.scss';\r\n\r\nconst CollectionOverview = ({ collections }) => (\r\n    <div className='collection-overview'>\r\n        {\r\n            collections.map(({ id, ...otherCollectionProps }) => (\r\n                <CollectionPreview key={id} {...otherCollectionProps} />\r\n            ))\r\n        }\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    collections: selectCollectionForPreview\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(CollectionOverview);","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CollectionOverview from \"../../components/collection-overview/collection-overview\";\r\nimport {\r\n  firestore,\r\n  convertCollectionSnapshotToMaps,\r\n} from \"../../firebase/firebase-utils\";\r\n// import CollectionPage from '../collection/collection';\r\n\r\nimport { updateCollections } from \"../../redux/shop/shop-action\";\r\n\r\nclass ShopPage extends React.Component {\r\n  unSubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const { updateCollections } = this.props;\r\n    const collectionRef = firestore.collection(\"collection\");\r\n\r\n    collectionRef.onSnapshot(async (snapshot) => {\r\n      const collectionsMap = convertCollectionSnapshotToMaps(snapshot);\r\n      updateCollections(collectionsMap);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\r\n        {/* <Route path='/shop/:catogryId' component={CollectionPage} /> */}\r\n\r\n        {/* <Route path={`${match.path}/:categoryId`} component={CollectionPage} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCollections: (collectionsMap) =>\r\n    dispatch(updateCollections(collectionsMap)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n","import shopActionTypes from \"./shop-types\";\r\n\r\n\r\nexport const updateCollections = collectionsMap => ({\r\n    type: shopActionTypes.UPDATE_COLLECTIONS,\r\n    payload: collectionsMap\r\n});","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam => createSelector(\r\n    [selectCollections],\r\n    collections => collections[collectionUrlParam]\r\n);\r\n\r\nexport const selectCollectionForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => Object.keys(collections).map(key => collections[key])\r\n);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CustomButton from '../custom-button/custom-button';\r\nimport { addItem } from '../../redux/cart/cart-action';\r\n\r\nimport './collection-item.scss';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n    const { name, price, imageUrl } = item;\r\n    return (\r\n        <div className='collection-item'>\r\n            <div\r\n                className='image'\r\n                style={{ backgroundImage: `url(${imageUrl})` }}\r\n            />\r\n            <div className='collection-footer'>\r\n                <span className='name'>{name}</span>\r\n                <span className='price'> {price * 70} </span>\r\n            </div>\r\n            <CustomButton onClick={() => addItem(item)} className='custom-button'  > ADD TO CART </CustomButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}